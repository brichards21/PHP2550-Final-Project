S_vec <- c(S_vec, split_pheno[[1]][j])
}
if (grepl("=R", split_pheno[[1]][j]) | grepl("=I", split_pheno[[1]][j])){
R_comb <- c(R_comb, split_pheno[[1]][j])
}
if (grepl("=S", split_pheno[[1]][j]) | grepl("=SDD", split_pheno[[1]][j])){
S_comb <- c(S_comb, split_pheno[[1]][j])
}
}
R_vec <- substr(R_vec,1,nchar(R_vec)-2)
R_vec <- paste(R_vec, collapse = ", ")
S_vec <- substr(S_vec,1,nchar(S_vec)-2)
S_vec <- paste(S_vec, collapse = ", ")
R_comb <- substr(R_comb,1,nchar(R_comb)-2)
R_comb <- paste(R_comb, collapse = ", ")
S_comb <- substr(S_comb,1,nchar(S_comb)-2)
S_comb <- paste(S_comb, collapse = ", ")
reorg_AST_df <- rbind(reorg_AST_df,
data.frame("resist_comb" = R_comb,
"suscept_comb" = S_comb,
"resist" = R_vec,
"suscept" = S_vec))
}
isolates_df <- cbind(isolates_df, reorg_AST_df) %>%
select(-ast_phenotypes)
# drug resistance
resist_salm <- isolates_df[isolates_df$organism_group == "Salmonella enterica", ]$resist_comb
resist_salm <- resist_salm[!is.na(resist_salm)]
resist_salm <- unlist(strsplit(resist_salm, ","))
resist_ecoli <- isolates_df[isolates_df$organism_group == "E.coli and Shigella", ]$resist_comb
resist_ecoli <- resist_ecoli[!is.na(resist_ecoli)]
resist_ecoli <- unlist(strsplit(resist_ecoli, ","))
resist_camp <- isolates_df[isolates_df$organism_group == "Campylobacter jejuni", ]$resist_comb
resist_camp <- resist_camp[!is.na(resist_camp)]
resist_camp <- unlist(strsplit(resist_camp, ","))
# drug susceptibility
sus_salm <- isolates_df[isolates_df$organism_group == "Salmonella enterica", ]$suscept_comb
sus_salm <- resist_salm[!is.na(sus_salm)]
sus_salm <- unlist(strsplit(sus_salm, ","))
sus_ecoli <- isolates_df[isolates_df$organism_group == "E.coli and Shigella", ]$suscept_comb
sus_ecoli <- sus_ecoli[!is.na(sus_ecoli)]
sus_ecoli <- unlist(strsplit(sus_ecoli, ","))
sus_camp <- isolates_df[isolates_df$organism_group == "Campylobacter jejuni", ]$suscept_comb
sus_camp <- sus_camp[!is.na(sus_camp)]
sus_camp <- unlist(strsplit(sus_camp, ","))
#sort(prop.table(table(trimws(resist_salm))), decreasing = TRUE)
#sort(prop.table(table(trimws(resist_ecoli))), decreasing = TRUE)
#sort(prop.table(table(trimws(resist_camp))), decreasing = TRUE)
#sort(prop.table(table(trimws(sus_salm))), decreasing = TRUE)
#sort(prop.table(table(trimws(sus_ecoli))), decreasing = TRUE)
#sort(prop.table(table(trimws(sus_camp))), decreasing = TRUE)
isolates_df<- isolates_df %>%
mutate(country = gsub(":.*$", "", location))
isolates_df <- isolates_df %>%
mutate(isolation_source = tolower(isolation_source),
isolation_source_new = ifelse(grepl("pork", isolation_source) |
grepl("swine", isolation_source) |
grepl("hog", isolation_source) |
grepl("chops", isolation_source) |
grepl("salami", isolation_source),
"pork",
ifelse(grepl("chicken", isolation_source),
"chicken",
ifelse(grepl("beef", isolation_source) |
grepl("GB", isolation_source) |
grepl("heifer", isolation_source) |
grepl("cattle", isolation_source),
"beef",
ifelse(grepl("turkey", isolation_source), "turkey",
ifelse(grepl("ox", isolation_source), "ox",
ifelse(grepl("dairy", isolation_source), "dairy",
ifelse(grepl("stool", isolation_source) |
grepl("blood", isolation_source) |
grepl("feces", isolation_source) |
grepl("manure", isolation_source) |
grepl("rect", isolation_source) | grepl("anus", isolation_source), "stool",
ifelse(grepl("blood", isolation_source), "blood",
ifelse(grepl("urine", isolation_source), "urine",
ifelse(grepl("shrimp", isolation_source), "shrimp",
ifelse(grepl("salmon", isolation_source), "salmon",
ifelse(grepl("egg", isolation_source), "egg",
ifelse(grepl("water", isolation_source) |
grepl("drainage", isolation_source), "water",
ifelse(is.na(isolation_source), NA, "other/unspecified")))))))))))))))
# isolation_source
# pork = string containing pork or swine or hogs or chops or salami
# chicken = string containing chicken
# beef = string containing beef or GB or heifer or cattle
# turkey = string containing turkey
# ox = string containing steer or ox
# dairy = string containing dairy
# stool = string containing stool or fesces or manure or rect or anus
# blood = string containing blood
# urine = string containing urine
# shrimp = string containing shrimp
# salmon = string containing salmon
# egg = string containing egg
# water = water or drainage
# if not NA, other/underspecified
# NA = NA
isolates_df <- isolates_df %>%
mutate(isolation_source_new = ifelse(isolation_source_new %in% c("egg", "salmon", "shrimp"),
"other/unspecified", isolation_source_new))
prop_source_bact <- prop.table(table(isolates_df$organism_group, isolates_df$isolation_source_new), 1) %>%
`*`(100) %>% round(2)
prop_source_bact <- as.data.frame(prop_source_bact) %>%
rename(Organism = Var1) %>%
pivot_wider(names_from = Var2,
values_from = Freq) %>%
mutate(across(everything(), as.character))
prop_source_bact[, -1] <- matrix(paste0(as.matrix(prop_source_bact[, -1]), '%'), nrow=3)
prop_source_bact <- as.data.frame(prop_source_bact)
kable(prop_source_bact, caption = "Prop. of Sources Represented Per Bacteria") %>%
kable_styling()
prop_isol_type <- prop.table(table(isolates_df$organism_group , isolates_df$isolation_type), 1)
prop_isol_type <- prop.table(table(isolates_df$organism_group, isolates_df$isolation_type), 1) %>%
`*`(100) %>% round(2)
prop_isol_type <- as.data.frame(prop_isol_type) %>%
rename(Organism = Var1) %>%
pivot_wider(names_from = Var2,
values_from = Freq) %>%
mutate(across(everything(), as.character))
prop_isol_type[, -1] <- matrix(paste0(as.matrix(prop_isol_type[, -1]), '%'), nrow=3)
prop_isol_type <- as.data.frame(prop_isol_type)
kable(prop_isol_type, caption = "Prop. of Isolation Type Represented Per Bacteria") %>%
kable_styling()
# isolates_df %>%
#   group_by(organism_group) %>%
#   summarise(clusts = length(unique(snp_cluster)))
#length(unique(isolates_df$amr_genotypes))
dist_df <- isolates_df[, c("organism_group", "min_same", "min_diff")] %>%
pivot_longer(!organism_group, names_to = "type", values_to = "value")
ggplot(dist_df, aes(x = value, col = type)) +
geom_histogram(aes(y = ..density..,
fill = type),
alpha = 0.3) +
geom_density(size = 0.8) +
facet_wrap(~ organism_group) +
labs(fill = "", col = "") +
theme_bw()
isolates_df <- isolates_df %>%
mutate(close_min_diff = ifelse(min_diff <= 7, TRUE, FALSE),
close_min_same = ifelse(min_same <= 7, TRUE, FALSE),
num_close = close_min_diff + close_min_same) %>%
select(-c(close_min_diff, close_min_same))
prop_close <- prop.table(table(isolates_df$organism_group, isolates_df$num_close), 1)
isolates_df <- isolates_df %>%
separate(computed_types, c("antigen_formula", "serotype"), ",serotype=") %>%
mutate(antigen_formula = str_remove(antigen_formula, "antigen_formula="))
#length(unique(isolates_df$antigen_formula))
count_antigen <- isolates_df[isolates_df$organism_group == "Salmonella enterica", ] %>%
group_by(antigen_formula) %>%
summarise(freq = n() / nrow(isolates_df)) %>%
arrange(desc(freq))
antigen_over_2 <- count_antigen %>%
filter(freq >= 0.02)
antigen_over_2 <- antigen_over_2$antigen_formula
isolates_df <- isolates_df %>%
mutate(antigen_formula_new = ifelse(antigen_formula %in% antigen_over_2,
antigen_formula,
"Other"))
# prop.table(table(isolates_df[isolates_df$organism_group == "Salmonella enterica",]$organism_group,
#                  isolates_df[isolates_df$organism_group == "Salmonella enterica",]$antigen_formula_new), 1)
# Within-Cluster Similarity
isolates_df <- isolates_df %>% mutate_all(na_if,"") %>%
mutate(suscept = tolower(suscept),
resist = tolower(resist),
suscept_comb = tolower(suscept_comb),
resist_comb = tolower(resist_comb)
)
mean_sim_func <- function(string, clusters) {
# string is variable
sim <- c()
purrr::map_dbl(seq_along(string), function(i) {
for (j in 1:length(clusters)) {
if (clusters[j] == clusters[i] & i != j &
!is.na(clusters[j]) & !is.na(clusters[i]))
{
sim <- c(sim, stringdist::stringsim(string[i], string[j]))
}
}
mean(sim)
})
}
# NA value if no other isolate in cluster
#isolates_df <- isolates_df %>%
#  mutate(suscept_sim = mean_sim_func(suscept_comb, snp_cluster),
#         resist_sim = mean_sim_func(resist_comb, snp_cluster),
#         )
#write_csv(isolates_df, "data/isolates_df_sim_up.csv")
isolates_df <- read_csv("data/isolates_df_sim_up.csv")
isolates_df <- as.data.frame(isolates_df)
cluster_stats <- isolates_df %>%
group_by(snp_cluster, suscept_sim, resist_sim) %>%
summarise(avg_suscept_sim = mean(suscept_sim),
avg_resist_sim = mean(resist_sim))
summary_clust_sim <- as.data.frame(do.call(cbind, lapply(cluster_stats, summary))) %>%
select(-snp_cluster)
summary_clust_sim <- summary_clust_sim[, 3:4]
kable(summary_clust_sim,
caption = "Drug Behavior Similarity between Clusters",
col.names = c("Susceptible Sim.",
"Resistant Sim.")) %>%
kable_styling()
close_dist_clust <- isolates_df %>%
group_by(snp_cluster) %>%
summarise(avg_suscept_sim = mean(suscept_sim),
avg_resist_sim = mean(resist_sim),
avg_min_diff = mean(min_diff),
avg_min_same = mean(min_same)
) %>%
mutate(close_clust = ifelse(avg_min_diff <= 10 | avg_min_same <= 10, "close", "distant")) %>%
group_by(close_clust) %>%
summarise(avg_sus = mean(avg_suscept_sim, na.rm = T),
avg_res = mean(avg_resist_sim, na.rm = T),
n = n())
close_dist_clust <- close_dist_clust %>%
filter(close_clust %in% c("close", "distant"))
kable(close_dist_clust,
caption = "Average drug responses for close and distant clusters with closeness being defined as an average min-diff or min-same SNP distance of < 10 SNPS",
col.names = c("Cluster Type", "Average Susceptibility",
"Average Resistance",
"Num Clusters")) %>%
kable_styling()
# isolates_df <- isolates_df %>%
#   mutate(iso_suscept_sim = mean_sim_func(suscept, isolation_source_new),
#          iso_resist_sim = mean_sim_func(resist, isolation_source_new),
#          iso_inter_sim = mean_sim_func(inter, isolation_source_new),
#          iso_sdd_sim = mean_sim_func(suscept_dose_dep, isolation_source_new)
#          )
#head(isolates_df)
# resistance
drug_res <- c(isolates_df$resist_comb)
drug_res <- drug_res[!is.na(drug_res)]
drug_res <- unlist(strsplit(drug_res, split = ","))
drug_res <- trimws(drug_res)
drug_res <- unique(drug_res)
# susceptibility
drug_sus <- c(isolates_df$suscept_comb)
drug_sus <- drug_sus[!is.na(drug_sus)]
drug_sus <- unlist(strsplit(drug_sus, split = ","))
drug_sus <- trimws(drug_sus)
drug_sus <- unique(drug_sus)
isolates_df
resistance_df <- data.frame(matrix(nrow = nrow(isolates_df),
ncol = length(drug_res)))
colnames(resistance_df) <- drug_res
resistance_df <- cbind(isolate = isolates_df$isolate, resistance_df)
for (i in 1:nrow(isolates_df)) {
for (j in 1:length(drug_res)) {
if (grepl(drug_res[j], isolates_df[i, "resist_comb"]))
{
resistance_df[i, drug_res[j]] <- 1
}
else {
resistance_df[i, drug_res[j]] <- 0
}
}
}
resistance_df <- cbind(strain = isolates_df$strain, organism_group = isolates_df$organism_group,
collection_date = isolates_df$collection_date,
snp_cluster = isolates_df$snp_cluster, resistance_df)
write_csv(resistance_df, "data/resistance_df.csv")
resistance_df <- as.data.frame(read_csv("data/resistance_df.csv"))
resistance_df
resistance_sum <- resistance_df %>%
group_by(snp_cluster, collection_date) %>%
summarise_if(is.numeric, funs(mean)) %>%
pivot_longer(!c(snp_cluster, collection_date), names_to = "drug",
values_to = "resistance")
set.seed(1)
subset_clust <- resistance_sum %>%
group_by(snp_cluster, collection_date) %>%
summarise(n = n()) %>%
group_by(snp_cluster) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
filter(n > 5, !is.na(snp_cluster))
rand_10_clusts <- sample(unique(subset_clust$snp_cluster), 10)
rand_10_clusts
rand10_clusts_df <- resistance_sum[resistance_sum$snp_cluster %in% rand_10_clusts, ]
ggplot(rand10_clusts_df[rand10_clusts_df$drug ==
"tetracycline",], aes(x = collection_date, y = resistance,
col = snp_cluster,
group = snp_cluster)) +
geom_point() +
geom_line(size = 1) +
labs(col = "")
set.seed(1)
subset_clust <- resistance_sum %>%
group_by(snp_cluster, collection_date) %>%
summarise(n = n()) %>%
group_by(snp_cluster) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
filter(n > 5, !is.na(snp_cluster))
rand_5_clusts <- sample(unique(subset_clust$snp_cluster), 5)
rand5_clusts_df <- resistance_sum[resistance_sum$snp_cluster %in% rand_5_clusts, ]
ggplot(rand5_clusts_df[rand5_clusts_df$drug ==
"tetracycline",], aes(x = collection_date, y = resistance,
col = snp_cluster,
group = snp_cluster)) +
geom_point() +
geom_line(size = 1) +
labs(col = "")
ggplot(rand5_clusts_df[rand5_clusts_df$drug ==
"tetracycline",], aes(x = collection_date, y = resistance,
col = snp_cluster,
group = snp_cluster)) +
geom_point() +
geom_line(size = 1) +
labs(col = "cluster") +
theme_bw()
resistance_sum
resistance_df
resistance_sum
set.seed(1)
subset_clust <- resistance_sum %>%
filter(drug == "tetracycline") %>%
group_by(snp_cluster, collection_date) %>%
summarise(n = n()) %>%
group_by(snp_cluster) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
filter(n > 5, !is.na(snp_cluster))
rand_5_clusts <- sample(unique(subset_clust$snp_cluster), 5)
rand5_clusts_df <- resistance_sum[resistance_sum$snp_cluster %in% rand_5_clusts, ]
ggplot(rand5_clusts_df[rand5_clusts_df$drug ==
"tetracycline",], aes(x = collection_date, y = resistance,
col = snp_cluster,
group = snp_cluster)) +
geom_point() +
geom_line(size = 1) +
labs(col = "cluster") +
theme_bw()
set.seed(1999)
subset_clust <- resistance_sum %>%
filter(drug == "tetracycline") %>%
group_by(snp_cluster, collection_date) %>%
summarise(n = n()) %>%
group_by(snp_cluster) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
filter(n > 5, !is.na(snp_cluster))
rand_5_clusts <- sample(unique(subset_clust$snp_cluster), 5)
rand5_clusts_df <- resistance_sum[resistance_sum$snp_cluster %in% rand_5_clusts, ]
ggplot(rand5_clusts_df[rand5_clusts_df$drug ==
"tetracycline",], aes(x = collection_date, y = resistance,
col = snp_cluster,
group = snp_cluster)) +
geom_point() +
geom_line(size = 1) +
labs(col = "cluster") +
theme_bw()
ggplot(rand5_clusts_df[rand5_clusts_df$drug ==
"tetracycline",], aes(x = collection_date, y = resistance,
col = snp_cluster,
group = snp_cluster)) +
geom_point() +
geom_line(size = 1) +
labs(col = "cluster") +
theme_bw() +
geom_hline(0.5)
ggplot(rand5_clusts_df[rand5_clusts_df$drug ==
"tetracycline",], aes(x = collection_date, y = resistance,
col = snp_cluster,
group = snp_cluster)) +
geom_point() +
geom_line(size = 1) +
labs(col = "cluster") +
theme_bw() +
geom_hline(yintercept = 0.5)
ggplot(rand5_clusts_df[rand5_clusts_df$drug ==
"tetracycline",], aes(x = collection_date, y = resistance,
col = snp_cluster,
group = snp_cluster)) +
geom_point() +
geom_line(size = 1) +
labs(col = "cluster") +
theme_bw() +
geom_hline(yintercept = 0.5, col = "red", linetype = "dashed")
ggplot(rand5_clusts_df[rand5_clusts_df$drug ==
"tetracycline",], aes(x = collection_date, y = resistance,
col = snp_cluster,
group = snp_cluster)) +
geom_point() +
geom_line(size = 1) +
labs(col = "cluster", x = "year") +
theme_bw() +
geom_hline(yintercept = 0.5, col = "red", linetype = "dashed")
ggplot(rand5_clusts_df[rand5_clusts_df$drug ==
"tetracycline",], aes(x = collection_date, y = resistance,
col = snp_cluster,
group = snp_cluster)) +
geom_point() +
geom_line(size = 1) +
labs(col = "cluster", x = "year") +
theme_bw() +
geom_hline(yintercept = 0.5, col = "red", linetype = "dashed",
size = 2)
ggplot(rand5_clusts_df[rand5_clusts_df$drug ==
"tetracycline",], aes(x = collection_date, y = resistance,
col = snp_cluster,
group = snp_cluster)) +
geom_point() +
geom_line(size = 1) +
labs(col = "cluster", x = "year") +
theme_bw() +
geom_hline(yintercept = 0.5, col = "red", linetype = "dashed",
size = 1)
ggplot(rand5_clusts_df[rand5_clusts_df$drug ==
"tetracycline",], aes(x = collection_date, y = resistance,
col = snp_cluster,
group = snp_cluster)) +
geom_point(size = 2) +
geom_line(size = 1) +
labs(col = "cluster", x = "year") +
theme_bw() +
geom_hline(yintercept = 0.5, col = "red", linetype = "dashed",
size = 1)
ggplot(rand5_clusts_df[rand5_clusts_df$drug ==
"tetracycline",], aes(x = collection_date, y = resistance,
col = snp_cluster,
group = snp_cluster)) +
geom_point(size = 3) +
geom_line(size = 1) +
labs(col = "cluster", x = "year") +
theme_bw() +
geom_hline(yintercept = 0.5, col = "red", linetype = "dashed",
size = 1)
susceptible_df <- data.frame(matrix(nrow = nrow(isolates_df),
ncol = length(drug_sus)))
colnames(susceptible_df) <- drug_sus
susceptible_df <- cbind(isolate = isolates_df$isolate, susceptible_df)
for (i in 1:nrow(isolates_df)) {
for (j in 1:length(drug_sus)) {
if (grepl(drug_sus[j], isolates_df[i, "suscept_comb"]))
{
susceptible_df[i, drug_sus[j]] <- 1
}
else {
susceptible_df[i, drug_sus[j]] <- 0
}
}
}
susceptible_df <- cbind(strain = isolates_df$strain, organism_group = isolates_df$organism_group,
collection_date = isolates_df$collection_date,
snp_cluster = isolates_df$snp_cluster, susceptible_df)
write_csv(susceptible_df, "data/susceptible_df.csv")
susceptible_df <- as.data.frame(read_csv("data/susceptible_df.csv"))
susceptible_df
susceptible_sum <- susceptible_df %>%
group_by(snp_cluster, collection_date) %>%
summarise_if(is.numeric, funs(mean)) %>%
pivot_longer(!c(snp_cluster, collection_date), names_to = "drug",
values_to = "susceptibility")
set.seed(1999)
subset_clust_sus <- susceptible_sum %>%
filter(drug == "tetracycline") %>%
group_by(snp_cluster, collection_date) %>%
summarise(n = n()) %>%
group_by(snp_cluster) %>%
summarise(n = n()) %>%
arrange(desc(n)) %>%
filter(n > 5, !is.na(snp_cluster))
rand_5_clusts_sus <- sample(unique(subset_clust_sus$snp_cluster), 5)
rand_5_clusts_sus
rand5_clusts_df_sus <- susceptible_sum[susceptible_sum$snp_cluster %in% rand_5_clusts_sus, ]
ggplot(rand5_clusts_df_sus[rand5_clusts_df_sus$drug ==
"tetracycline",], aes(x = collection_date, y = susceptibility,
col = snp_cluster,
group = snp_cluster)) +
geom_point(size = 3) +
geom_line(size = 1) +
labs(col = "cluster", x = "year") +
theme_bw() +
geom_hline(yintercept = 0.5, col = "red", linetype = "dashed",
size = 1)
summary_clust_sim[-tail(1),]
head(summary_clust_sim, -1)
version)
version
View(isolates_df)
knitr::opts_chunk$set(message=FALSE, warning=FALSE, error=FALSE, echo = FALSE, fig.width = 6, fig.height = 4)
library(readr)
library(janitor)
library(tidyverse)
library(knitr)
library(kableExtra)
library(stringdist)
head(unlist(isolates_df$amr_genotypes))
head(split(unlist(isolates_df$amr_genotypes), ","))
head(str_split(unlist(isolates_df$amr_genotypes), ","))
head(unlist(str_split(unlist(isolates_df$amr_genotypes), ",")))
sort(prop.table(table(unlist(str_split(unlist(isolates_df$amr_genotypes), ",")))), decreasing = T)
#length(unique(isolates_df$amr_genotypes))
split_genes <- str_split(unlist(isolates_df$amr_genotypes), ",")
sort(prop.table(table(unlist(split_genes))), decreasing = T)
#length(unique(isolates_df$amr_genotypes))
split_genes <- unlist(str_split(unlist(isolates_df$amr_genotypes), ","))
split_genes_sal <- unlist(str_split(unlist(isolates_df[isolates_df$organism_group == "Salmonella enterica",]$amr_genotypes), ","))
split_genes_ecoli <- unlist(str_split(unlist(isolates_df[isolates_df$organism_group == "E.coli and Shigella",]$amr_genotypes), ","))
split_genes_camp <- unlist(str_split(unlist(isolates_df[isolates_df$organism_group == "Campylobacter jejuni",]$amr_genotypes), ","))
sort(prop.table(table(split_genes_sal)), decreasing = T)
sort(prop.table(table(split_genes_ecoli)), decreasing = T)
sort(prop.table(table(split_genes_camp)), decreasing = T)
sort(prop.table(table(split_genes_sal)), decreasing = T)
sort(prop.table(table(split_genes_ecoli)), decreasing = T)
sort(prop.table(table(split_genes_camp)), decreasing = T)
isolates_df
View(isolates_df)
write_csv(isolates_df, "data/isolates_df.csv")
